[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\elias\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\elias\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Amazon.com Inc. Java 17.0.8.1)
[debug]       Load.loadUnit: plugins took 72.7228ms
[debug]       Load.loadUnit: defsScala took 0.2314ms
[debug] [Loading] Scanning directory C:\Users\elias\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\elias\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.4671 ms
[debug]           Load.resolveProject(global-plugins) took 37.3183ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\elias\.sbt\1.0\plugins, plugins: List(<none>))) took 63.129ms
[debug] [Loading] Done in C:\Users\elias\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 78.6851ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1582ms
[debug]     Load.loadUnit(file:/C:/Users/elias/.sbt/1.0/plugins/, ...) took 158.4183ms
[debug]   Load.apply: load took 307.6324ms
[debug]   Load.apply: resolveProjects took 4.9446ms
[debug]   Load.apply: finalTransforms took 43.4455ms
[debug]   Load.apply: config.delegates took 11.8273ms
[debug]   Load.apply: Def.make(settings)... took 322.4264ms
[debug]   Load.apply: structureIndex took 80.611ms
[debug]   Load.apply: mkStreams took 1.4935ms
[info] loading global plugins from C:\Users\elias\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2363.6465ms
[debug]           Load.loadUnit: plugins took 19.634ms
[debug]           Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\elias\IdeaProjects\dc-weatherbot\project
[debug]             Load.loadUnit: mkEval took 4.0366ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\elias\IdeaProjects\dc-weatherbot\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2255 ms
[info] loading settings for project dc-weatherbot-build from idea.sbt ...
[debug]               Load.resolveProject(dc-weatherbot-build) took 10.0177ms
[debug]             Load.loadTransitive: finalizeProject(Project(id dc-weatherbot-build, base: C:\Users\elias\IdeaProjects\dc-weatherbot\project, plugins: List(<none>))) took 11.685ms
[debug] [Loading] Done in C:\Users\elias\IdeaProjects\dc-weatherbot\project, returning: (dc-weatherbot-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 134.3899ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.9837ms
[debug]         Load.loadUnit(file:/C:/Users/elias/IdeaProjects/dc-weatherbot/project/, ...) took 160.818ms
[debug]       Load.apply: load took 162.9409ms
[debug]       Load.apply: resolveProjects took 0.2198ms
[debug]       Load.apply: finalTransforms took 10.2936ms
[debug]       Load.apply: config.delegates took 0.3322ms
[debug]       Load.apply: Def.make(settings)... took 63.3094ms
[debug]       Load.apply: structureIndex took 29.4355ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from C:\Users\elias\IdeaProjects\dc-weatherbot\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 644.0491ms
[debug]     Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\elias\IdeaProjects\dc-weatherbot
[debug]       Load.loadUnit: mkEval took 0.2615ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.4213 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 26.1398ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\elias\IdeaProjects\dc-weatherbot, plugins: List(<none>))) took 30.2169ms
[debug] [Loading] Done in C:\Users\elias\IdeaProjects\dc-weatherbot, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 96.4634ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.8858ms
[debug]   Load.loadUnit(file:/C:/Users/elias/IdeaProjects/dc-weatherbot/, ...) took 752.2259ms
[debug] Load.apply: load took 753.8593ms
[debug] Load.apply: resolveProjects took 0.1053ms
[debug] Load.apply: finalTransforms took 22.3373ms
[debug] Load.apply: config.delegates took 0.2709ms
[debug] Load.apply: Def.make(settings)... took 58.1835ms
[debug] Load.apply: structureIndex took 17.7724ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to dc-weatherbot (in build file:/C:/Users/elias/IdeaProjects/dc-weatherbot/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54385 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54385, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to dc-weatherbot (in build file:/C:/Users/elias/IdeaProjects/dc-weatherbot/)
[debug] > Exec(idea-shell, None, None)
