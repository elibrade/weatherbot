[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\elias\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\elias\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Amazon.com Inc. Java 17.0.9)
[debug]       Load.loadUnit: plugins took 76.7452ms
[debug]       Load.loadUnit: defsScala took 0.2619ms
[debug] [Loading] Scanning directory C:\Users\elias\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\elias\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.7791 ms
[debug]           Load.resolveProject(global-plugins) took 42.5741ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\elias\.sbt\1.0\plugins, plugins: List(<none>))) took 79.474ms
[debug] [Loading] Done in C:\Users\elias\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 104.5071ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.219ms
[debug]     Load.loadUnit(file:/C:/Users/elias/.sbt/1.0/plugins/, ...) took 190.0721ms
[debug]   Load.apply: load took 380.3935ms
[debug]   Load.apply: resolveProjects took 4.9569ms
[debug]   Load.apply: finalTransforms took 44.8185ms
[debug]   Load.apply: config.delegates took 5.6494ms
[debug]   Load.apply: Def.make(settings)... took 328.6696ms
[debug]   Load.apply: structureIndex took 77.5325ms
[debug]   Load.apply: mkStreams took 1.7056ms
[info] loading global plugins from C:\Users\elias\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1836.2338ms
[debug]           Load.loadUnit: plugins took 22.4596ms
[debug]           Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\Users\elias\IdeaProjects\dc-weatherbot\project
[debug]             Load.loadUnit: mkEval took 6.0972ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\elias\IdeaProjects\dc-weatherbot\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.3307 ms
[info] loading settings for project dc-weatherbot-build from idea.sbt ...
[debug]               Load.resolveProject(dc-weatherbot-build) took 6.2074ms
[debug]             Load.loadTransitive: finalizeProject(Project(id dc-weatherbot-build, base: C:\Users\elias\IdeaProjects\dc-weatherbot\project, plugins: List(<none>))) took 10.4795ms
[debug] [Loading] Done in C:\Users\elias\IdeaProjects\dc-weatherbot\project, returning: (dc-weatherbot-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 237.6349ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.9851ms
[debug]         Load.loadUnit(file:/C:/Users/elias/IdeaProjects/dc-weatherbot/project/, ...) took 271.1305ms
[debug]       Load.apply: load took 273.5327ms
[debug]       Load.apply: resolveProjects took 0.2384ms
[debug]       Load.apply: finalTransforms took 18.6376ms
[debug]       Load.apply: config.delegates took 0.4683ms
[debug]       Load.apply: Def.make(settings)... took 234.1815ms
[debug]       Load.apply: structureIndex took 36.7569ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from C:\Users\elias\IdeaProjects\dc-weatherbot\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2170.98ms
[debug]     Load.loadUnit: defsScala took 0.0021ms
[debug] [Loading] Scanning directory C:\Users\elias\IdeaProjects\dc-weatherbot
[debug]       Load.loadUnit: mkEval took 0.2534ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.3499 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 31.4278ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\elias\IdeaProjects\dc-weatherbot, plugins: List(<none>))) took 35.8482ms
[debug] [Loading] Done in C:\Users\elias\IdeaProjects\dc-weatherbot, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3114.2562ms
[debug]     Load.loadUnit: cleanEvalClasses took 20.4335ms
[debug]   Load.loadUnit(file:/C:/Users/elias/IdeaProjects/dc-weatherbot/, ...) took 5306.6233ms
[debug] Load.apply: load took 5308.8151ms
[debug] Load.apply: resolveProjects took 0.1625ms
[debug] Load.apply: finalTransforms took 23.2241ms
[debug] Load.apply: config.delegates took 0.3953ms
[debug] Load.apply: Def.make(settings)... took 56.5723ms
[debug] Load.apply: structureIndex took 24.4733ms
[debug] Load.apply: mkStreams took 0.0036ms
[info] set current project to dc-weatherbot (in build file:/C:/Users/elias/IdeaProjects/dc-weatherbot/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51237 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51237, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to dc-weatherbot (in build file:/C:/Users/elias/IdeaProjects/dc-weatherbot/)
[debug] > Exec(idea-shell, None, None)
